scor[i,j] = rho#^abs(i-j)
scor[j,i] = scor[i,j]
}
}
}
sigma <- matrix(NA, nrow = nVar, ncol = nVar)
for (i in 1:nVar){
for (j in 1:nVar){
sigma[i,j] = exp(logSdS[i]) * exp(logSdS[j]) * scor[i,j]
}
}
#res <- rmvnorm(n = nObs, sigma = sigma)
L <-  t(chol(sigma))
res <- matrix(rnorm(n = nObs * nVar), nrow = nObs, ncol = nVar) %*% L
x <- matrix(nrow = nObs, ncol = nVar)
x[1,] <- res[1,]
for (i in 2:nObs) { # simulate random walk
x[i, ] <- x[i-1, ] + res[i,]
}
cov(diff(x)) # check that covariance is what you expect
#res <- rmvnorm(n = nObs, sigma = sigma)
L <-  t(chol(sigma))
res <- L %*% matrix(rnorm(n = nVar * nObs), nrow = nVar, ncol = nObs)
x <- matrix(nrow = nVar, ncol = nObs)
x[,1] <- res[,1]
for (i in 2:nObs) { # simulate random walk
x[,i] <- x[,i-1] + res[,i]
}
cov(diff(t(x))) # check that covariance is what you expect
compile("fitMvnorm.cpp")
dyn.load(dynlib("fitMvnorm"))
parameters <- list(logSdS = rep(0, nVar),
itrans_rho = 0)
obj <- MakeADFun(data = list(x = x,
nVar = nVar),
parameters,
DLL = "fitMvnorm")
opt <- do.call("optim", obj)
opt
out <- sdreport(obj)
data.frame(variable = names(out$value),
value    = out$value,
sd       = out$sd) %>%
filter(variable %in% c("scor", "ssd", "rho"))
scor
obj$report()
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
cov(diff(t(x)))
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
scor
sigma
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
0^2
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
2/(1 + exp(-2 * x)) - 1
x
x=0
2/(1 + exp(-2 * x)) - 1
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/mvnorm_practice.R', echo=TRUE)
cor(diff(t(x))) # check that covariance is what you expect
34/18
6/4
setwd("C:/Users/charles.perretti/Projects/misreporting-estimation")
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
setupModMis$par$logScale
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
`with misreporting`
x<-`with misreporting`
x$opt$par
which(x$opt$par < 0.01)
which(x$opt$par %>% abs < 0.01)
x$opt$par[which(x$opt$par %>% abs < 0.01)]
exp(0)
x$sdrep$sd
x$opt$par[which(x$sdrep$sd %>% abs < 0.01)]
x$obj$he()
x$obj$hessian
x$obj$report()
x$sdrep$cov.fixed
cov_fixed <-x$sdrep$cov.fixed
View(cov_fixed)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
diag(cov_fixed)
cov_fixed <-x$sdrep$cov.fixed
x<- `with misreportin`; cov_fixed <-x$sdrep$cov.fixed
x<- `with misreportinh`; cov_fixed <-x$sdrep$cov.fixed
x<- `with misreporting`; cov_fixed <-x$sdrep$cov.fixed
logScaleMapped <- setupModMis$par$logScale #<<TEST
logScaleMapped
logScaleMapped[100:177] = NA
# fitMis <- sam.fit_cp(setupModMis$dat, setupModMis$conf, setupModMis$par,
#                      map = list("logScale" = factor(logScaleMapped)))
`with misreporting`<-
sam.fit(setupModMis$dat, setupModMis$conf, setupModMis$par#,
#map = list("logScale" = factor(logScaleMapped))
)
logScaleMapped[1:177] = NA
logScaleMapped[100:177] = NA
# fitMis <- sam.fit_cp(setupModMis$dat, setupModMis$conf, setupModMis$par,
#                      map = list("logScale" = factor(logScaleMapped)))
`with misreporting`<-
sam.fit(setupModMis$dat, setupModMis$conf, setupModMis$par,
map = list("logScale" = factor(logScaleMapped))
)
# Compare models
compareTs(base, `with misreporting`)
logScaleMapped[150:177] = NA
# fitMis <- sam.fit_cp(setupModMis$dat, setupModMis$conf, setupModMis$par,
#                      map = list("logScale" = factor(logScaleMapped)))
`with misreporting`<-
sam.fit(setupModMis$dat, setupModMis$conf, setupModMis$par,
map = list("logScale" = factor(logScaleMapped))
)
# Compare models
compareTs(base, `with misreporting`)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
logScaleMapped[164] = NA
# fitMis <- sam.fit_cp(setupModMis$dat, setupModMis$conf, setupModMis$par,
#                      map = list("logScale" = factor(logScaleMapped)))
`with misreporting`<-
sam.fit(setupModMis$dat, setupModMis$conf, setupModMis$par,
map = list("logScale" = factor(logScaleMapped))
)
# Compare models
compareTs(base, `with misreporting`)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
logScaleMapped
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
#logScaleMapped <- setupModMis$par$logScale #<<TEST
#logScaleMapped <- 0:(length(logScaleMapped)-1)
#logScaleMapped[160:260] = NA
`with misreporting` <-
sam.fit_cp(setupModMis$dat, setupModMis$conf, setupModMis$par,
map = list("logScale" = factor(logScaleMapped)))
#logScaleMapped <- setupModMis$par$logScale #<<TEST
#logScaleMapped <- 0:(length(logScaleMapped)-1)
#logScaleMapped[160:260] = NA
`with misreporting` <-
sam.fit_cp(setupModMis$dat, setupModMis$conf, setupModMis$par)#,
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
source("./archive/sam.fit_cp.R")
source("./archive/sam.fit_cp.R")
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "random walk")
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw")
debugSource('C:/Users/charles.perretti/Projects/misreporting-estimation/./functions/setupModel.R')
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw")
dat$propF
conf$keyLogFsta
keyVarF
conf$keyVarF
source('C:/Users/charles.perretti/Projects/misreporting-estimation/./functions/setupModel.R')
keyLogScale
source('C:/Users/charles.perretti/Projects/misreporting-estimation/./functions/setupModel.R')
keyLogScale
source('C:/Users/charles.perretti/Projects/misreporting-estimation/./functions/setupModel.R')
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw")
source('C:/Users/charles.perretti/Projects/misreporting-estimation/./functions/setupModel.R')
source('C:/Users/charles.perretti/Projects/misreporting-estimation/./functions/setupModel.R')
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw")
setwd("C:/Users/charles.perretti/Projects/misreporting-estimation")
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw") #<<<< FIX THIS <<<<<
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw") #<<<< FIX THIS <<<<<
par <- stockassessment::defpar(dat, conf)
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw") #<<<< FIX THIS <<<<<
source('C:/Users/charles.perretti/Projects/misreporting-estimation/./functions/setupModel.R')
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw") #<<<< FIX THIS <<<<<
setupModMis
# Fit models
base <- sam.fit(setupMod$dat, setupMod$conf, setupMod$par)
`with misreporting`<-
sam.fit(setupModMis$dat, setupModMis$conf, setupModMis$par)
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw") #<<<< FIX THIS <<<<<
`with misreporting`<-
sam.fit(setupModMis$dat, setupModMis$conf, setupModMis$par)
`with misreporting`<-
sam.fit_cp(setupModMis$dat, setupModMis$conf, setupModMis$par)
setupModMis$conf$maxAgePlusGroup
setupMod$conf$maxAgePlusGroup
setupMod$conf$maxAgePlusGroup %>% class
setupModMis$conf$maxAgePlusGroup %>% class
setupModMis$conf$maxAgePlusGroup == setupMod$conf$maxAgePlusGroup
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
# Fit models
base <- sam.fit(setupMod$dat, setupMod$conf, setupMod$par)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/./functions/setupModel.R')
source('C:/Users/charles.perretti/Projects/misreporting-estimation/./functions/setupModel.R')
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
setupModMis$conf$maxAgePlusGroup
setupMod$conf$maxAgePlusGroup
source('C:/Users/charles.perretti/Projects/misreporting-estimation/archive/sam.fit_cp.R')
`with misreporting`<-
sam.fit_cp(setupModMis$dat, setupModMis$conf, setupModMis$par)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/archive/sam.fit_cp.R')
source('C:/Users/charles.perretti/Projects/misreporting-estimation/./functions/setupModel.R')
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw") #<<<< FIX THIS <<<<<
setupModMis$dat
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
setupModMis$conf$maxAge
setupModMis$dat$aux
setupModMis$dat$aux %>% head
dat = setupModMis$dat
tapply(dat$aux[, 3], INDEX = dat$aux[,
2], FUN = range)
do.call(rbind, tapply(dat$aux[, 3], INDEX = dat$aux[,
2], FUN = range))
dat$fleetTypes
fleetTypes <- dat$fleetTypes
ages[fleetTypes %in% c(3, 5), ] <- NA
ages
ages <- do.call(rbind, tapply(dat$aux[, 3], INDEX = dat$aux[,
2], FUN = range))
ages[fleetTypes %in% c(3, 5), ] <- NA
ages
min(ages, na.rm = TRUE)
minAge <- min(ages, na.rm = TRUE)
max(ages, na.rm = TRUE)
maxAge <- max(ages, na.rm = TRUE)
ages[is.na(ages)] <- minAge
ages
nAges <- maxAge - minAge + 1
nFleets <- nrow(ages)
ret <- list()
ret$minAge <- minAge
ret$maxAge <- maxAge
ret
ages[, 2]
ages
ages[, 2]
class(Ages)
class(ages)
ages[,2]
ages
ages[2,2]
max(ages[,
2]
max(ages[,
2]
max(ages[,
2]
max(ages[,
2], na.rm = TRUE)
max(ages[,
2], na.rm = TRUE)
ages[, 2] == max(ages[,
2], na.rm = TRUE)
ages[, 2]
setwd("C:/Users/charles.perretti/Projects/misreporting-estimation")
debugSource('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
`with misreporting`<-
sam.fit_cp(setupModMis$dat, setupModMis$conf, setupModMis$par)
setupModMis$conf$maxAgePlusGroup
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw") #<<<< FIX THIS <<<<<
fleetTypes <- dat$fleetTypes
ages <- do.call(rbind, tapply(dat$aux[, 3], INDEX = dat$aux[,
2], FUN = range))
ages[fleetTypes %in% c(3, 5), ] <- NA
minAge <- min(ages, na.rm = TRUE)
maxAge <- max(ages, na.rm = TRUE)
ages[is.na(ages)] <- minAge
nAges <- maxAge - minAge + 1
nFleets <- nrow(ages)
ret <- list()
ret$minAge <- minAge
ret$maxAge <- maxAge
maxAge
minAge
ages[, 2]
ages[, 2] == max(ages[,
2], na.rm = TRUE)
max(ages[,
2]
, na.rm = TRUE)
ages[, 2]
minAge <- min(ages, na.rm = TRUE)
ages <- do.call(rbind, tapply(dat$aux[, 3], INDEX = dat$aux[,
2], FUN = range))
ages
fleetTypes <- dat$fleetTypes
fleetTypes
debugSource('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
debugSource('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw") #<<<< FIX THIS <<<<<
path_root
debugSource('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
path_root <- paste0("../github_clones/wg_MGWG/state-space/",
stock_dir, "/")
# Read in data
cn <- read.ices(paste0(path_root, toupper(stock_dir), "_cn.dat")) # catch abundace-at-age
sy <- read.ices(paste0(path_root, toupper(stock_dir), "_survey.dat")) #surveys
cw <- read.ices(paste0(path_root, toupper(stock_dir), "_cw.dat")) # catch mean weight-at-age
dw <- read.ices(paste0(path_root, toupper(stock_dir), "_dw.dat")) # discards mean weight-at-age
lw <- read.ices(paste0(path_root, toupper(stock_dir), "_lw.dat")) # landings mean weight-at-age
pf <- read.ices(paste0(path_root, toupper(stock_dir), "_pf.dat")) # proportion of f before spawning
lf <- read.ices(paste0(path_root, toupper(stock_dir), "_lf.dat")) # fraction of catch that is landed
mo <- read.ices(paste0(path_root, toupper(stock_dir), "_mo.dat")) # maturity-at-age ogive
nm <- read.ices(paste0(path_root, toupper(stock_dir), "_nm.dat")) # natural mortality-at-age
pm <- read.ices(paste0(path_root, toupper(stock_dir), "_pm.dat")) # proportion of m before spawning
sw <- read.ices(paste0(path_root, toupper(stock_dir), "_sw.dat")) # stock weight-at-age (kg)
# setup the data as needed for SAM
dat <- setup.sam.data(surveys = sy,
residual.fleet = cn,
prop.mature = mo,
stock.mean.weight = sw,
dis.mean.weight = dw,
land.mean.weight = lw,
land.frac = lf,
prop.f = pf,
prop.m = pm,
natural.mortality = nm,
catch.mean.weight = cw)
debugSource('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
debugSource('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
path_root
debugSource('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
path_root
# Load model configuration file
#conf <- stockassessment::defcon(dat)
conf <- loadConf(dat, paste0(path_root, "SAM/model.cfg"))
conf$maxAgePlusGroup
source('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
source('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
source('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
`with misreporting`<-
sam.fit_cp(setupModMis$dat, setupModMis$conf, setupModMis$par)
debugSource('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw") #<<<< FIX THIS <<<<<
source('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw") #<<<< FIX THIS <<<<<
`with misreporting`<-
sam.fit_cp(setupModMis$dat, setupModMis$conf, setupModMis$par)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw") #<<<< FIX THIS <<<<<
`with misreporting`<-
sam.fit_cp(setupModMis$dat, setupModMis$conf, setupModMis$par)
# Compare models
compareTs(base, `with misreporting`)
x<-`with misreporting`
x$sdrep
x$pl$logScale
exp(x$pl$logScale)
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw")
source('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
setupModMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw")
`with misreporting`<-
sam.fit_cp(setupModMis$dat, setupModMis$conf, setupModMis$par)
# Fit models
runBase <- sam.fit(setupMod$dat, setupMod$conf, setupMod$par)
runMis<-
sam.fit_cp(setupModMis$dat, setupModMis$conf, setupModMis$par)
# Compare models
compareTs(runBase, runMis)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
fitMis$pl$logScale
fitMis$pl$logScale %>% exp
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
# Fit models
fitBase <- sam.fit(setupMod$dat, setupMod$conf, setupMod$par)
fitBase$conf$keyLogFsta
logSd = 2
exp(logSd * 2)
exp(logSd) ^ 2
logSd = 5
exp(logSd) ^ 2
exp(logSd * 2)
100000 * 0.04 / 12
150 * 12
8 * 200 * 12
26,347.17 - (26,347.17 - 19200) * .15
26347.17 - (26347.17 - 19200) * .15
9 * 200 * 12
30759.48 - (30759.48 - 21600) * 15
30759.48 - (30759.48 - 21600) * 0.15
35480 - (35480 - 24000) * 0.15
fitBase$conf$corFlag
# Install local forked version of package with changes
devtools::install_local("../SAM/stockassessment/", force = TRUE)
# Install local forked version of package with changes
devtools::install_local("../SAM/stockassessment/", force = TRUE)
setwd("C:/Users/charles.perretti/Projects/misreporting-estimation")
# Install local forked version of package with changes
devtools::install_local("../SAM/stockassessment/", force = TRUE)
# Install local forked version of package with changes
devtools::install_local("../SAM/stockassessment/", force = TRUE)
# Install local forked version of package with changes
devtools::install_local("../SAM/stockassessment/", force = TRUE)
setwd("C:/Users/charles.perretti/Projects/misreporting-estimation")
# Install local forked version of package with changes
devtools::install_local("../SAM/stockassessment/", force = TRUE)
# Install local forked version of package with changes
devtools::install_local("../SAM/stockassessment/", force = TRUE)
# Install local forked version of package with changes
devtools::install_local("../SAM/stockassessment/", force = TRUE)
# Install local forked version of package with changes
devtools::install_local("../SAM/stockassessment/", force = TRUE)
# Install local forked version of package with changes
devtools::install_local("../SAM/stockassessment/", force = TRUE)
# Install local forked version of package with changes
devtools::install_local("../SAM/stockassessment/", force = TRUE)
devtools::install_local("../SAM/stockassessment/", force = TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
devtools::install_local("../SAM/stockassessment/", force = TRUE)
devtools::install_local("../SAM/stockassessment/", force = TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
devtools::install_local("../SAM/stockassessment/", force = TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
debugSource('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
debugSource('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
setupMis <- setupModel(stock_dir = "GOMcod",
misreportingType = "rw")
# Load model configuration file
conf <- loadConf(dat, paste0(path_root, "SAM/model.cfg"))
source('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
devtools::install_local("../SAM/stockassessment/", force = TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
fitMis <- sam.fit_cp(setupMis$dat, setupMis$conf, setupMis$par)
fitMis <- sam.fit_cp(setupMis$dat, setupMis$conf, setupMis$par)
devtools::install_local("../SAM/stockassessment/", force = TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
conf$keyVarF
devtools::install_local("../SAM/stockassessment/", force = TRUE)
devtools::install_local("../SAM/stockassessment/", force = TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
devtools::install_local("../SAM/stockassessment/", force = TRUE)
devtools::install_local("../SAM/stockassessment/", force = TRUE)
devtools::install_local("../SAM/stockassessment/", force = TRUE)
devtools::install_local("../SAM/stockassessment/", force = TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
x=1.515
2/(1 + exp(-2 * x)) - 1
fitMis$plsd$logSdLogSsta
fitMis$plsd$logSdLogSsta %>% exp()
0.9 ^2
0.9 ^3
0.9 ^4
0.9 ^5
# Fit models
fitBase <- sam.fit(setupBase$dat, setupBase$conf, setupBase$par)
# Compare models
compareTs(fitBase, fitMis)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
source('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
source('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
source('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
fitMis$sdrep$value
fitMis$pl$logS
source('C:/Users/charles.perretti/Projects/misreporting-estimation/functions/setupModel.R')
fitMis$pl$itrans_rhoS
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
devtools::install_local("../SAM/stockassessment/", force = TRUE)
devtools::install_local("../SAM/stockassessment/", force = TRUE)
devtools::install_local("../SAM/stockassessment/", force = TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
devtools::install_local("../SAM2/stockassessment/", force = TRUE)
devtools::install_local("../SAM2/stockassessment/", force = TRUE)
source('C:/Users/charles.perretti/Projects/misreporting-estimation/run.R', echo=TRUE)
fitMis$pl$itrans_rhoS
